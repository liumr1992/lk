<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.3.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
         http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx.xsd

        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd

          ">



   <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
    <jaxws:endpoint
    id="TeacherService"
    implementor="com.lk.serviceimpl.TeacherServiceImpl"
    address="/teacherService"
    />
    <jaxws:endpoint id="UserService"
    implementor="com.lk.serviceimpl.UserServiceImpl"
    address="/userService"
    />
    <bean id="webServiceTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">
        <property name="defaultUri" value="http://localhost:8080/webService/teacherService"/>
    </bean>


    <context:component-scan base-package=" com.lk.dao,com.lk.service,com.lk.serviceimpl,com.lk.util"></context:component-scan>


    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties"/>


    <!-- 配置C3P0数据源 -->
    <bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc1.username}"></property>
        <property name="password" value="${jdbc1.password}"></property>
        <property name="driverClass" value="${jdbc1.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc1.url}"></property>



    </bean>
    <bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc2.username}"></property>
        <property name="password" value="${jdbc2.password}"></property>
        <property name="driverClass" value="${jdbc2.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc2.url}"></property>



    </bean>

    <bean id="dynamicDataSource" class="com.lk.util.DynamicDataSource">
     <property  name="targetDataSources">

   <map key-type="java.lang.String">

       <entry  key="dataSource1" value-ref="dataSource1"></entry>
       <entry   key="dataSource2" value-ref="dataSource2"></entry>
   </map>

     </property>

     <property name="defaultTargetDataSource" ref="dataSource1" />

    </bean>

    <!-- 配置spring-jdbcTemplate模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dynamicDataSource"></property>
    </bean>

    <!-- 配置 NamedParameterJdbcTemplate,
         该对象可以使用具名参数, 其没有无参数的构造器, 所以必须为其构造器指定参数 -->
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dynamicDataSource"></constructor-arg>
    </bean>






    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"></property>
    </bean>
    <!-- 配置RestTemplate -->
    <!--Http client Factory-->
    <bean id="httpClientFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="connectTimeout"  value="5000"/>
        <property name="readTimeout"  value="10000"/>
    </bean>

    <!--RestTemplate-->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="httpClientFactory"/>
    </bean>

    <!-- 启用事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- spring注解模式配置 -->
    <context:annotation-config/>


</beans>
